plugins {
    id 'application'
    id 'matter.distribution'
    id 'com.bmuschko.docker-remote-api'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

dependencies {
    implementation project(":matter-base")
    implementation "org.codehaus.groovy:groovy:$groovy"
    implementation "org.antlr:antlr4-runtime:$antlr4Version"
    antlr "org.antlr:antlr4:$antlr4Version"
    runtimetools project(":matter-runtimetools")
    testImplementation project(":matter-base-test")
}

application {
    mainClassName = 'com.twosigma.beakerx.groovy.kernel.Groovy'
}

compileJava {
    dependsOn('antlr4_groovy_lexer', 'antlr4_groovy_parser')
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task antlr4_groovy_lexer(type: JavaExec) {
    main = "org.antlr.v4.Tool"
    workingDir = "src/main/antlr4/"
    classpath = configurations.antlr
    args = [
        "GroovyLexer.g4",
        "-o", "../java/com/twosigma/beakerx/groovy/autocomplete",
        "-listener",
        "-no-visitor",
        "-package", "com.twosigma.beakerx.groovy.autocomplete",
        "-encoding", "UTF-8"
    ]
}
task antlr4_groovy_parser(type: JavaExec) {
    main = "org.antlr.v4.Tool"
    workingDir = "src/main/antlr4/"
    classpath = configurations.antlr
    args = [
        "GroovyParser.g4",
        "-o", "../java/com/twosigma/beakerx/groovy/autocomplete",
        "-listener",
        "-no-visitor",
        "-package", "com.twosigma.beakerx.groovy.autocomplete",
        "-encoding", "UTF-8"
    ]
}

task buildMatterDockerImage(type: DockerBuildImage, dependsOn: 'build') {
    group("build")
    description("Creates a Docker image with Matter Groovy Kernel installed")
    inputDir = file("$buildDir/dist/")
    images.add("$group/matter:$version")
}