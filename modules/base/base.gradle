/*
 *  Copyright 2020 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
version 'unspecified'

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

dependencies {
    compile project(':base-api')
    provided project(':doclet')
    compile group: 'com.opencsv', name: 'opencsv', version: '3.10'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.5'
    compile group: 'com.github.jupyter', name: 'jvm-repr', version: '0.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'org.apache.maven.shared', name: 'maven-invoker', version: '3.0.0'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.5'
    compile 'io.javalin:javalin:1.7.0'

    compile group: "org.zeromq", name: "jeromq", version: "0.3.5"
    compile group: 'org.apache.ivy', name: 'ivy', version: '2.4.0'

    compile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.assertj', name: 'assertj-core', version: '3.6.1'

    testCompile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    testCompile project(':base-test')
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.twosigma'
            artifactId 'beakerx-kernel-base'
            version "$beakerxVersion"
            from components.java
        }
    }
}

def gitGetHash() {
    def name = "git log --pretty=format:%h -n 1".execute().text.trim()
    return name
}

def resourceDir = file("./src/main/resources")

def gitGetCommitHash() {
    return "git rev-list --tags --max-count=1".execute().text.trim()
}

def gitGetLatestTagVersion() {
    def gitLatestTag = "git describe --tags " + gitGetCommitHash() + ""
    return gitLatestTag.execute().text.trim()
}

def mainDir = file("../../")

task prepareBuildVersion() {
    doLast {
        new File(resourceDir, 'version').write(gitGetLatestTagVersion())
        new File(resourceDir, 'hash').write(gitGetHash())
        new File(resourceDir, 'build_time').write(new Date().format("yyyy-MM-dd HH:mm z"))
        new File(mainDir, 'VERSION').write(gitGetLatestTagVersion())
    }
}

compileJava.dependsOn prepareBuildVersion


task jvmInspectJavaDoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    options.doclet = "com.twosigma.beakerx.doclet.BeakerxDoclet"
    options.docletpath = [file("../doclet/build/libs/doclet.jar")]
    options.addStringOption("subpackages", "com.twosigma.beakerx")
    options.addStringOption("sourcepath", "../base/src/main/java")
    options.addStringOption("encoding", "UTF-8")
}


task moveInspectJson(type: Copy) {
    from("beakerx_inspect.json")
    into("build/resources/main")
}

jvmInspectJavaDoc.finalizedBy moveInspectJson
compileJava.finalizedBy jvmInspectJavaDoc

